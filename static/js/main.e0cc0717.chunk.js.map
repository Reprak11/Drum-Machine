{"version":3,"sources":["components/Title.jsx","components/OneButton.jsx","components/Buttonpad.jsx","components/PowerButton.jsx","components/Display.jsx","components/VolumeControl.jsx","components/AudioControl.jsx","components/Beatbox.jsx","App.js","app/store.js","index.js"],"names":["Title","className","connect","dispatch","changeSound","name","soundURL","type","buttonText","keyletter","onClick","state","sounds","map","element","value","soundName","power","changePower","powerState","class","volume","changeVolume","volumeValue","min","max","step","onChange","e","target","AudioControl","Beatbox","changeKeySound","keyPressed","tabIndex","onKeyPress","event","key","initialState","TEMPO","POWERSWITCH","VOLUMENCHANGE","playAudio","audio","Audio","play","createStore","action","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.e0cc0717.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Title = () => (\r\n    <h1 className=\"title\">Drum Machine</h1>\r\n)\r\n\r\nexport default Title","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst OneButton = ({buttonText, soundURL,keyletter, name,changeSound}) => {\r\n\r\nconst actionButton = () => {\r\n    changeSound(name, soundURL)\r\n    //document.getElementById(name).play()\r\n}\r\n//<audio id={name} src= {soundURL}></audio>\r\nreturn (\r\n    <button className=\"cacafuti-200\" type=\"button\" onClick={actionButton}>{buttonText}</button>\r\n)\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => (\r\n    {\r\n        changeSound: (name, soundURL) => {dispatch({\r\n            type: 'TEMPO',\r\n            name: name,\r\n            soundURL: soundURL\r\n            })\r\n        }\r\n    }\r\n)\r\n\r\nexport default connect(null, mapDispatchToProps)(OneButton)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport OneButton from './OneButton'\r\n\r\nconst Buttonpad = ({sounds}) => {\r\n    //const buttons = sounds.map(element => <oneButton />)\r\n\r\n\r\nreturn(<div className=\"button-grid\">\r\n        {sounds.map(element => <OneButton keyletter={element.keyletter} buttonText={element.value} soundURL={element.soundURL} name={element.soundName}/>)}\r\n    </div>)\r\n    \r\n}\r\n\r\nconst mapStateToProps = state => (\r\n    {\r\n        sounds: state.sounds,\r\n    }\r\n)\r\n\r\n\r\nexport default connect(mapStateToProps, null)(Buttonpad)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nconst PowerButton = ({power,changePower}) => {\r\n    const inputAction = () => {\r\n        if (power){\r\n            changePower(false)\r\n        } else {\r\n            changePower(true)\r\n        }\r\n    }\r\n    return (<div className=\"toggle-switch\">\r\n        <label className=\"switch\">\r\n            <input onClick={inputAction} type=\"checkbox\" />\r\n            <span class=\"slider\" />\r\n        </label>\r\n    </div>)\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    power: state.power\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    changePower: (powerState) =>{dispatch({\r\n        type: \"POWERSWITCH\",\r\n        power: powerState\r\n        })\r\n    }\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PowerButton)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Display = ({name}) => (\r\n    <div className=\"display\">\r\n        <h2>{name}</h2>\r\n    </div>\r\n    \r\n)\r\n\r\nconst mapStateToProps = state => ({\r\n    name: state.name\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(Display)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nconst VolumeControl = ({volume, changeVolume}) => {\r\n    const handleVolume = e =>{\r\n        changeVolume(e.target.value)\r\n    }\r\n    return(<div className=\"volume-control\">\r\n            <input type=\"range\" min=\"0\" max=\"100\" step=\"1\" value={volume} onChange={handleVolume}/>\r\n        </div>)\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    volume: state.volume\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    changeVolume: (volumeValue) => {dispatch({\r\n        type: \"VOLUMENCHANGE\",\r\n        volume: volumeValue\r\n    })}\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VolumeControl)","import React from 'react'\r\nimport PowerButton from './PowerButton'\r\nimport Display from './Display'\r\nimport VolumenControl from './VolumeControl'\r\n\r\nconst AudioControl = () =>(\r\n    <div>\r\n        <Display />\r\n        <div className=\"controls\">\r\n            <div className=\"one-control\">\r\n                <h3 className=\"control-text\">Power</h3>\r\n                <PowerButton />\r\n            </div>\r\n            <div className=\"one-control\">\r\n                <h3 className=\"control-text\">Volume</h3>\r\n                <VolumenControl />\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default AudioControl","import React from 'react'\r\nimport Buttonpad from './Buttonpad'\r\nimport AudioControl from './AudioControl'\r\n\r\n\r\nconst Beatbox = ({changeKeySound}) => {\r\n\r\n    return (<div className=\"beatbox\">\r\n        <AudioControl />\r\n        <Buttonpad />\r\n    </div>)\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => (\r\n    {\r\n        changeKeySound: (keyPressed) => {dispatch({\r\n            type: 'KEY',\r\n            keyPressed: keyPressed \r\n            })\r\n        }\r\n    }\r\n)\r\n\r\nexport default Beatbox","import React from 'react';\r\nimport './App.css';\r\nimport Title from \"./components/Title\"\r\nimport Beatbox from \"./components/Beatbox\"\r\nimport { connect } from 'react-redux'\r\n\r\n\r\n\r\nfunction App({changeKeySound}) {\r\n    const handleKeyPress = event => {\r\n        changeKeySound(event.key)\r\n    };\r\n  return (\r\n    <div className=\"drumbox\" tabIndex=\"0\" onKeyPress={handleKeyPress}>\r\n      <Title />\r\n      <Beatbox />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => (\r\n  {\r\n      changeKeySound: (keyPressed) => {dispatch({\r\n          type: 'KEY',\r\n          keyPressed: keyPressed \r\n          })\r\n      }\r\n  }\r\n)\r\n\r\nexport default connect(null, mapDispatchToProps) (App);\r\n","import { createStore } from 'redux';\r\nimport { sounds } from '../assets/sounds.json'\r\n\r\nconst initialState = {\r\n  power: false,\r\n  value: '',\r\n  sounds: sounds,\r\n  name: '',\r\n  volume: 50\r\n}\r\n\r\nconst TEMPO = \"TEMPO\"\r\nconst POWERSWITCH = \"POWERSWITCH\"\r\nconst VOLUMENCHANGE = \"VOLUMENCHANGE\"\r\nconst KEY = \"KEY\"\r\n\r\nconst playAudio = (soundURL, volumeValue) => {\r\n  const audio = new Audio (soundURL)\r\n  audio.volume=volumeValue/100\r\n  audio.play()\r\n}\r\n\r\nconst soundsReducer = (state=initialState, action) => {\r\n    switch (action.type){\r\n      case TEMPO:\r\n        if (state.power){\r\n          playAudio(action.soundURL, state.volume)\r\n          return {...state, name: action.name}\r\n        } else {\r\n          return state\r\n        }\r\n      case POWERSWITCH:\r\n        return {...state, power: action.power, value: '', name: ''}\r\n      case VOLUMENCHANGE:\r\n        return {...state, volume: action.volume}\r\n      case KEY:\r\n      if (state.power){\r\n        switch (action.keyPressed){\r\n          case 'q':\r\n            playAudio(sounds[0].soundURL, state.volume)\r\n            return {...state, name: sounds[0].soundName}\r\n          case 'w':\r\n            playAudio(sounds[1].soundURL, state.volume)\r\n            return {...state, name: sounds[1].soundName}\r\n          case 'e':\r\n            playAudio(sounds[2].soundURL, state.volume)\r\n            return {...state, name: sounds[2].soundName}\r\n          case 'a':\r\n            playAudio(sounds[3].soundURL, state.volume)\r\n            return {...state, name: sounds[3].soundName}\r\n          case 's':\r\n            playAudio(sounds[4].soundURL, state.volume)\r\n            return {...state, name: sounds[4].soundName}\r\n          case 'd':\r\n            playAudio(sounds[5].soundURL, state.volume)\r\n            return {...state, name: sounds[5].soundName}\r\n          case 'z':\r\n            playAudio(sounds[6].soundURL, state.volume)\r\n            return {...state, name: sounds[6].soundName}\r\n          case 'x':\r\n            playAudio(sounds[7].soundURL, state.volume)\r\n            return {...state, name: sounds[7].soundName}\r\n          case 'c':\r\n            playAudio(sounds[8].soundURL, state.volume)\r\n            return {...state, name: sounds[8].soundName}\r\n          default:\r\n            return state\r\n        }\r\n      } else {\r\n        return state\r\n      }  \r\n      default:\r\n        return state\r\n    }\r\n}\r\n\r\nexport default createStore(soundsReducer);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n\r\n"],"sourceRoot":""}